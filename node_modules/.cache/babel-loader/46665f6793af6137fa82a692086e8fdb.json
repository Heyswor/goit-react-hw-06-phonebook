{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0444\\\\Desktop\\\\\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435 GOIT\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\";\nimport React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      id: '',\n      name: '',\n      number: ''\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value,\n        id\n      } = event.currentTarget;\n      this.setState({\n        id: id,\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: nanoid(),\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            id: nanoid(),\n            type: \"text\",\n            name: \"name\",\n            pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n            title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: nanoid(),\n          children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            id: nanoid(),\n            type: \"tel\",\n            name: \"number\",\n            pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n            title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ф/Desktop/обучение GOIT/goit-react-hw-02-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["React","Component","nanoid","ContactForm","state","id","name","number","handleChange","event","value","currentTarget","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,OAAO,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACzCG,KADyC,GACjC;AACNC,MAAAA,EAAE,EAAE,EADE;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,MAAM,EAAE;AAHF,KADiC;;AAAA,SAOzCC,YAPyC,GAO1BC,KAAK,IAAI;AACtB,YAAM;AAAEH,QAAAA,IAAF;AAAQI,QAAAA,KAAR;AAAeL,QAAAA;AAAf,UAAsBI,KAAK,CAACE,aAAlC;AAEA,WAAKC,QAAL,CAAc;AACZP,QAAAA,EAAE,EAAEA,EADQ;AAEZ,SAACC,IAAD,GAAQI;AAFI,OAAd;AAID,KAdwC;AAAA;;AAgBzCG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAEX,MAAM,EAAtB;AAAA,0CAEE;AACA,YAAA,QAAQ,EAAE,KAAKM,YADf;AAEE,YAAA,EAAE,EAAEN,MAAM,EAFZ;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,IAAI,EAAC,MAJP;AAKE,YAAA,OAAO,EAAC,wHALV;AAME,YAAA,KAAK,EAAC,wIANR;AAOE,YAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE;AAAO,UAAA,OAAO,EAAEA,MAAM,EAAtB;AAAA,4CAEE;AACA,YAAA,QAAQ,EAAE,KAAKM,YADf;AAEE,YAAA,EAAE,EAAEN,MAAM,EAFZ;AAGE,YAAA,IAAI,EAAC,KAHP;AAIE,YAAA,IAAI,EAAC,QAJP;AAKE,YAAA,OAAO,EAAC,wFALV;AAME,YAAA,KAAK,EAAC,8FANR;AAOE,YAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,eA0BE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgCD;;AAjDwC","sourcesContent":["import React, { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport class ContactForm extends Component {\r\n  state = {\r\n    id: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value, id } = event.currentTarget;\r\n \r\n    this.setState({\r\n      id: id,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form>\r\n          <label htmlFor={nanoid()}>\r\n            Name\r\n            <input\r\n            onChange={this.handleChange}\r\n              id={nanoid()}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor={nanoid()}>\r\n            Number\r\n            <input\r\n            onChange={this.handleChange}\r\n              id={nanoid()}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"button\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}