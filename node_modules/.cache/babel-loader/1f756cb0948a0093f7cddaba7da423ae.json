{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0444\\\\Desktop\\\\\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435 GOIT\\\\goit-react-hw-04-phonebook\\\\src\\\\components\\\\App.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { ContactList } from './ContactList/ContactList';\nimport { Filter } from './Filter/Filter';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useLocalStorage = (key, defaultValue) => {\n  _s();\n\n  const [state, setState] = useState(); // useState => {\n  //   return JSON.parse(localStorage.getItem(key)) ?? defaultValue;\n  // };\n};\n\n_s(useLocalStorage, \"NTqKeJem0kxPdWdnhkCI+0oYHTA=\");\n\nexport function App() {\n  _s2();\n\n  const [contacts, setContacts] = useLocalStorage('contacts', [{\n    id: 'id-1',\n    name: 'Rosie Simpson',\n    number: '459-12-56'\n  }, {\n    id: 'id-2',\n    name: 'Hermione Kline',\n    number: '443-89-12'\n  }, {\n    id: 'id-3',\n    name: 'Eden Clements',\n    number: '645-17-79'\n  }, {\n    id: 'id-4',\n    name: 'Annie Copeland',\n    number: '227-91-26'\n  }]); // useState([\n  //   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  //   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  //   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  //   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  // ]);\n\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleContactAdd = data => {\n    const {\n      name\n    } = data;\n    const findedContact = contacts.find(contact => contact.name.toLowerCase().includes(name.toLowerCase()));\n\n    if (findedContact) {\n      alert(`${findedContact.name} is already in contacts`);\n      return;\n    } else {\n      setContacts(prevState => [...prevState, data]);\n    }\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevState => prevState.filter(contact => contact.id !== contactId));\n  };\n\n  const lowercaseFilter = filter.toLocaleLowerCase();\n  const filtredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(lowercaseFilter));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      onSumbit: handleContactAdd,\n      contacts: contacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filter: filter,\n      onChange: changeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: filtredContacts,\n      deleteContact: deleteContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n} // export class App extends Component {\n//   state = {\n// contacts: [\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ],\n//     filter: '',\n//   };\n//   componentDidMount() {\n//     const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts });\n//     }\n//   }\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n//     }\n//   }\n//   handleContactAdd = data => {\n//     const { name } = data;\n// const findedContact = this.state.contacts.find(contact =>\n//   contact.name.toLowerCase().includes(name.toLowerCase())\n// );\n// if (findedContact) {\n//   alert(`${findedContact.name} is already in contacts`);\n//   return;\n// } else {\n//   this.setState(prevState => ({\n//     contacts: [...prevState.contacts, data],\n//   }));\n//     }\n//   };\n//   changeFilter = e => {\n//     this.setState({ filter: e.currentTarget.value });\n//   };\n//   deleteContact = contactId => {\n//     this.setState(prevState => ({\n//       contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n//     }));\n//   };\n//   render() {\n//     const { filter, contacts } = this.state;\n//     const lowercaseFilter = filter.toLocaleLowerCase();\n//     const filtredContacts = contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(lowercaseFilter)\n//     );\n// return (\n//   <div>\n//     <h1>Phonebook</h1>\n//     <ContactForm onSumbit={this.handleContactAdd} contacts={contacts} />\n//     <h2>Contacts</h2>\n//     <Filter filter={filter} onChange={this.changeFilter} />\n//     <ContactList\n//       contacts={filtredContacts}\n//       deleteContact={this.deleteContact}\n//     />\n//   </div>\n// );\n//   }\n// }\n\n_s2(App, \"XeTQDJZgpPh8x38N0YZNsCqV31Q=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ф/Desktop/обучение GOIT/goit-react-hw-04-phonebook/src/components/App.jsx"],"names":["ContactForm","ContactList","Filter","React","useState","useEffect","useLocalStorage","key","defaultValue","state","setState","App","contacts","setContacts","id","name","number","filter","setFilter","localStorage","setItem","JSON","stringify","handleContactAdd","data","findedContact","find","contact","toLowerCase","includes","alert","prevState","changeFilter","e","currentTarget","value","deleteContact","contactId","lowercaseFilter","toLocaleLowerCase","filtredContacts"],"mappings":"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","sourcesContent":["import { ContactForm } from './ContactForm/ContactForm';\r\nimport { ContactList } from './ContactList/ContactList';\r\nimport { Filter } from './Filter/Filter';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst useLocalStorage = (key, defaultValue) => {\r\n  const [state, setState] = useState()\r\n  // useState => {\r\n  //   return JSON.parse(localStorage.getItem(key)) ?? defaultValue;\r\n  // };\r\n};\r\n\r\nexport function App() {\r\n  const [contacts, setContacts] = useLocalStorage('contacts', [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ]);\r\n\r\n  // useState([\r\n  //   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  //   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  //   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  //   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  // ]);\r\n\r\n  const [filter, setFilter] = useState('');\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const handleContactAdd = data => {\r\n    const { name } = data;\r\n    const findedContact = contacts.find(contact =>\r\n      contact.name.toLowerCase().includes(name.toLowerCase())\r\n    );\r\n    if (findedContact) {\r\n      alert(`${findedContact.name} is already in contacts`);\r\n      return;\r\n    } else {\r\n      setContacts(prevState => [...prevState, data]);\r\n    }\r\n  };\r\n\r\n  const changeFilter = e => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n  const deleteContact = contactId => {\r\n    setContacts(prevState =>\r\n      prevState.filter(contact => contact.id !== contactId)\r\n    );\r\n  };\r\n\r\n  const lowercaseFilter = filter.toLocaleLowerCase();\r\n  const filtredContacts = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(lowercaseFilter)\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSumbit={handleContactAdd} contacts={contacts} />\r\n\r\n      <h2>Contacts</h2>\r\n      <Filter filter={filter} onChange={changeFilter} />\r\n      <ContactList contacts={filtredContacts} deleteContact={deleteContact} />\r\n    </div>\r\n  );\r\n}\r\n\r\n// export class App extends Component {\r\n//   state = {\r\n// contacts: [\r\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n// ],\r\n//     filter: '',\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n//     if (parsedContacts) {\r\n//       this.setState({ contacts: parsedContacts });\r\n//     }\r\n//   }\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     if (this.state.contacts !== prevState.contacts) {\r\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n//     }\r\n//   }\r\n\r\n//   handleContactAdd = data => {\r\n//     const { name } = data;\r\n\r\n// const findedContact = this.state.contacts.find(contact =>\r\n//   contact.name.toLowerCase().includes(name.toLowerCase())\r\n// );\r\n\r\n// if (findedContact) {\r\n//   alert(`${findedContact.name} is already in contacts`);\r\n//   return;\r\n// } else {\r\n//   this.setState(prevState => ({\r\n//     contacts: [...prevState.contacts, data],\r\n//   }));\r\n//     }\r\n//   };\r\n\r\n//   changeFilter = e => {\r\n//     this.setState({ filter: e.currentTarget.value });\r\n//   };\r\n\r\n//   deleteContact = contactId => {\r\n//     this.setState(prevState => ({\r\n//       contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n//     }));\r\n//   };\r\n\r\n//   render() {\r\n//     const { filter, contacts } = this.state;\r\n//     const lowercaseFilter = filter.toLocaleLowerCase();\r\n\r\n//     const filtredContacts = contacts.filter(contact =>\r\n//       contact.name.toLowerCase().includes(lowercaseFilter)\r\n//     );\r\n\r\n// return (\r\n//   <div>\r\n//     <h1>Phonebook</h1>\r\n//     <ContactForm onSumbit={this.handleContactAdd} contacts={contacts} />\r\n\r\n//     <h2>Contacts</h2>\r\n//     <Filter filter={filter} onChange={this.changeFilter} />\r\n//     <ContactList\r\n//       contacts={filtredContacts}\r\n//       deleteContact={this.deleteContact}\r\n//     />\r\n//   </div>\r\n// );\r\n//   }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}