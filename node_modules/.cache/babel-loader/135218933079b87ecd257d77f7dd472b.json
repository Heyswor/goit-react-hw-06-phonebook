{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0444\\\\Desktop\\\\\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435 GOIT\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\";\nimport React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      id: '',\n      name: '',\n      number: ''\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value,\n        id\n      } = event.currentTarget;\n      this.setState({\n        id: id,\n        [name]: value\n      });\n    };\n\n    this.handleSumbmit = e => {\n      e.preventDefault();\n      console.log(event.currentTarget);\n      this.props.onSumbit(this.state);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        id: '',\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSumbmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: nanoid(4),\n            type: \"text\",\n            name: \"name\",\n            value: this.state.name,\n            pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n            title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            required: true,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: nanoid(4),\n            type: \"tel\",\n            name: \"number\",\n            value: this.state.number,\n            pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n            title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n            required: true,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ф/Desktop/обучение GOIT/goit-react-hw-02-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["React","Component","nanoid","ContactForm","state","id","name","number","handleChange","event","value","currentTarget","setState","handleSumbmit","e","preventDefault","console","log","props","onSumbit","reset","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,OAAO,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACzCG,KADyC,GACjC;AACNC,MAAAA,EAAE,EAAE,EADE;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,MAAM,EAAE;AAHF,KADiC;;AAAA,SAOzCC,YAPyC,GAO1BC,KAAK,IAAI;AACtB,YAAM;AAAEH,QAAAA,IAAF;AAAQI,QAAAA,KAAR;AAAeL,QAAAA;AAAf,UAAsBI,KAAK,CAACE,aAAlC;AACA,WAAKC,QAAL,CAAc;AACZP,QAAAA,EAAE,EAAEA,EADQ;AAEZ,SAACC,IAAD,GAAQI;AAFI,OAAd;AAID,KAbwC;;AAAA,SAgBzCG,aAhByC,GAgBzBC,CAAC,IAAI;AACnBA,MAAAA,CAAC,CAACC,cAAF;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACE,aAAlB;AACA,WAAKO,KAAL,CAAWC,QAAX,CAAoB,KAAKf,KAAzB;AACI,WAAKgB,KAAL;AACL,KAtBwC;;AAAA,SAwBzCA,KAxByC,GAwBjC,MAAM;AACZ,WAAKR,QAAL,CAAc;AACZP,QAAAA,EAAE,EAAE,EADQ;AAEZC,QAAAA,IAAI,EAAE,EAFM;AAGZC,QAAAA,MAAM,EAAE;AAHI,OAAd;AAKD,KA9BwC;AAAA;;AAgCzCc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAE,KAAKR,aAArB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,EAAf;AAAA,0CAEE;AACE,YAAA,EAAE,EAAEX,MAAM,CAAC,CAAD,CADZ;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,KAAK,EAAE,KAAKE,KAAL,CAAWE,IAJpB;AAKE,YAAA,OAAO,EAAC,wHALV;AAME,YAAA,KAAK,EAAC,wIANR;AAOE,YAAA,QAAQ,MAPV;AAQE,YAAA,QAAQ,EAAE,KAAKE;AARjB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE;AAAO,UAAA,OAAO,EAAC,EAAf;AAAA,4CAEE;AACE,YAAA,EAAE,EAAEN,MAAM,CAAC,CAAD,CADZ;AAEE,YAAA,IAAI,EAAC,KAFP;AAGE,YAAA,IAAI,EAAC,QAHP;AAIE,YAAA,KAAK,EAAE,KAAKE,KAAL,CAAWG,MAJpB;AAKE,YAAA,OAAO,EAAC,wFALV;AAME,YAAA,KAAK,EAAC,8FANR;AAOE,YAAA,QAAQ,MAPV;AAQE,YAAA,QAAQ,EAAE,KAAKC;AARjB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,eA4BE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAkCD;;AAnEwC","sourcesContent":["import React, { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport class ContactForm extends Component {\r\n  state = {\r\n    id: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value, id } = event.currentTarget;\r\n    this.setState({\r\n      id: id,\r\n      [name]: value,\r\n    });   \r\n  };\r\n\r\n\r\n  handleSumbmit = e => {\r\n    e.preventDefault();\r\n\r\n    console.log(event.currentTarget);\r\n    this.props.onSumbit(this.state); \r\n        this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      id: '',\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSumbmit}>\r\n          <label htmlFor=''>\r\n            Name\r\n            <input\r\n              id={nanoid(4)}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=''>\r\n            Number\r\n            <input\r\n              id={nanoid(4)}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}