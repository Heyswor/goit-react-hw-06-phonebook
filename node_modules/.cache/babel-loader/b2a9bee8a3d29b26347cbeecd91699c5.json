{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0444\\\\Desktop\\\\\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435 GOIT\\\\goit-react-hw-04-phonebook\\\\src\\\\components\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { ContactList } from './ContactList/ContactList';\nimport { Filter } from './Filter/Filter';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const [contacts, setContacts] = useState('');\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleContactAdd = data => {\n    const {\n      name\n    } = data;\n    const findedContact = contacts.find(contact => contact.name.toLowerCase().includes(name.toLowerCase()));\n\n    if (findedContact) {\n      alert(`${findedContact.name} is already in contacts`);\n      return;\n    } else {\n      setContacts(prevState => [...prevState, data]);\n    }\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevState => prevState.filter(contact => contact.id !== contactId));\n  };\n\n  const lowercaseFilter = filter.toLocaleLowerCase();\n  const filtredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(lowercaseFilter));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      onSumbit: handleContactAdd,\n      contacts: contacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filter: filter,\n      onChange: changeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: filtredContacts,\n      deleteContact: deleteContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n} // export class App extends Component {\n//   state = {\n// contacts: [\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ],\n//     filter: '',\n//   };\n//   componentDidMount() {\n//     const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts });\n//     }\n//   }\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n//     }\n//   }\n//   handleContactAdd = data => {\n//     const { name } = data;\n// const findedContact = this.state.contacts.find(contact =>\n//   contact.name.toLowerCase().includes(name.toLowerCase())\n// );\n// if (findedContact) {\n//   alert(`${findedContact.name} is already in contacts`);\n//   return;\n// } else {\n//   this.setState(prevState => ({\n//     contacts: [...prevState.contacts, data],\n//   }));\n//     }\n//   };\n//   changeFilter = e => {\n//     this.setState({ filter: e.currentTarget.value });\n//   };\n//   deleteContact = contactId => {\n//     this.setState(prevState => ({\n//       contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n//     }));\n//   };\n//   render() {\n//     const { filter, contacts } = this.state;\n//     const lowercaseFilter = filter.toLocaleLowerCase();\n//     const filtredContacts = contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(lowercaseFilter)\n//     );\n// return (\n//   <div>\n//     <h1>Phonebook</h1>\n//     <ContactForm onSumbit={this.handleContactAdd} contacts={contacts} />\n//     <h2>Contacts</h2>\n//     <Filter filter={filter} onChange={this.changeFilter} />\n//     <ContactList\n//       contacts={filtredContacts}\n//       deleteContact={this.deleteContact}\n//     />\n//   </div>\n// );\n//   }\n// }\n\n_s(App, \"qYJvaP/VvcpCSyshOVX4eW/0Dis=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ф/Desktop/обучение GOIT/goit-react-hw-04-phonebook/src/components/App.jsx"],"names":["ContactForm","ContactList","Filter","React","useState","useEffect","App","contacts","setContacts","filter","setFilter","localStorage","setItem","JSON","stringify","handleContactAdd","data","name","findedContact","find","contact","toLowerCase","includes","alert","prevState","changeFilter","e","currentTarget","value","deleteContact","contactId","id","lowercaseFilter","toLocaleLowerCase","filtredContacts"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,2BAA5B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,OAAO,SAASC,GAAT,GAAe;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeP,QAAf,CAAjC;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;;AAIA,QAAMQ,gBAAgB,GAAGC,IAAI,IAAI;AAC/B,UAAM;AAAEC,MAAAA;AAAF,QAAWD,IAAjB;AACA,UAAME,aAAa,GAAGX,QAAQ,CAACY,IAAT,CAAcC,OAAO,IACzCA,OAAO,CAACH,IAAR,CAAaI,WAAb,GAA2BC,QAA3B,CAAoCL,IAAI,CAACI,WAAL,EAApC,CADoB,CAAtB;;AAGA,QAAIH,aAAJ,EAAmB;AACjBK,MAAAA,KAAK,CAAE,GAAEL,aAAa,CAACD,IAAK,yBAAvB,CAAL;AACA;AACD,KAHD,MAGO;AACLT,MAAAA,WAAW,CAACgB,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeR,IAAf,CAAd,CAAX;AACD;AACF,GAXD;;AAaA,QAAMS,YAAY,GAAGC,CAAC,IAAI;AACxBhB,IAAAA,SAAS,CAACgB,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAT;AACD,GAFD;;AAGA,QAAMC,aAAa,GAAGC,SAAS,IAAI;AACjCtB,IAAAA,WAAW,CAACgB,SAAS,IACnBA,SAAS,CAACf,MAAV,CAAiBW,OAAO,IAAIA,OAAO,CAACW,EAAR,KAAeD,SAA3C,CADS,CAAX;AAGD,GAJD;;AAMA,QAAME,eAAe,GAAGvB,MAAM,CAACwB,iBAAP,EAAxB;AACA,QAAMC,eAAe,GAAG3B,QAAQ,CAACE,MAAT,CAAgBW,OAAO,IAC7CA,OAAO,CAACH,IAAR,CAAaI,WAAb,GAA2BC,QAA3B,CAAoCU,eAApC,CADsB,CAAxB;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEjB,gBAAvB;AAAyC,MAAA,QAAQ,EAAER;AAAnD;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEE,MAAhB;AAAwB,MAAA,QAAQ,EAAEgB;AAAlC;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAES,eAAvB;AAAwC,MAAA,aAAa,EAAEL;AAAvD;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAxHgBvB,G;;KAAAA,G","sourcesContent":["import { ContactForm } from './ContactForm/ContactForm';\r\nimport { ContactList } from './ContactList/ContactList';\r\nimport { Filter } from './Filter/Filter';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nexport function App() {\r\n  const [contacts, setContacts] = useState('');\r\n\r\n  const [filter, setFilter] = useState('');\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const handleContactAdd = data => {\r\n    const { name } = data;\r\n    const findedContact = contacts.find(contact =>\r\n      contact.name.toLowerCase().includes(name.toLowerCase())\r\n    );\r\n    if (findedContact) {\r\n      alert(`${findedContact.name} is already in contacts`);\r\n      return;\r\n    } else {\r\n      setContacts(prevState => [...prevState, data]);\r\n    }\r\n  };\r\n\r\n  const changeFilter = e => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n  const deleteContact = contactId => {\r\n    setContacts(prevState =>\r\n      prevState.filter(contact => contact.id !== contactId)\r\n    );\r\n  };\r\n\r\n  const lowercaseFilter = filter.toLocaleLowerCase();\r\n  const filtredContacts = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(lowercaseFilter)\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSumbit={handleContactAdd} contacts={contacts} />\r\n\r\n      <h2>Contacts</h2>\r\n      <Filter filter={filter} onChange={changeFilter} />\r\n      <ContactList contacts={filtredContacts} deleteContact={deleteContact} />\r\n    </div>\r\n  );\r\n}\r\n\r\n// export class App extends Component {\r\n//   state = {\r\n// contacts: [\r\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n// ],\r\n//     filter: '',\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n//     if (parsedContacts) {\r\n//       this.setState({ contacts: parsedContacts });\r\n//     }\r\n//   }\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     if (this.state.contacts !== prevState.contacts) {\r\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n//     }\r\n//   }\r\n\r\n//   handleContactAdd = data => {\r\n//     const { name } = data;\r\n\r\n// const findedContact = this.state.contacts.find(contact =>\r\n//   contact.name.toLowerCase().includes(name.toLowerCase())\r\n// );\r\n\r\n// if (findedContact) {\r\n//   alert(`${findedContact.name} is already in contacts`);\r\n//   return;\r\n// } else {\r\n//   this.setState(prevState => ({\r\n//     contacts: [...prevState.contacts, data],\r\n//   }));\r\n//     }\r\n//   };\r\n\r\n//   changeFilter = e => {\r\n//     this.setState({ filter: e.currentTarget.value });\r\n//   };\r\n\r\n//   deleteContact = contactId => {\r\n//     this.setState(prevState => ({\r\n//       contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n//     }));\r\n//   };\r\n\r\n//   render() {\r\n//     const { filter, contacts } = this.state;\r\n//     const lowercaseFilter = filter.toLocaleLowerCase();\r\n\r\n//     const filtredContacts = contacts.filter(contact =>\r\n//       contact.name.toLowerCase().includes(lowercaseFilter)\r\n//     );\r\n\r\n// return (\r\n//   <div>\r\n//     <h1>Phonebook</h1>\r\n//     <ContactForm onSumbit={this.handleContactAdd} contacts={contacts} />\r\n\r\n//     <h2>Contacts</h2>\r\n//     <Filter filter={filter} onChange={this.changeFilter} />\r\n//     <ContactList\r\n//       contacts={filtredContacts}\r\n//       deleteContact={this.deleteContact}\r\n//     />\r\n//   </div>\r\n// );\r\n//   }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}