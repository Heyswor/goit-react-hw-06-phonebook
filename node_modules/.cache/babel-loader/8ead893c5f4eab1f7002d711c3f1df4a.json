{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0444\\\\Desktop\\\\\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435 GOIT\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\Filter\\\\Filter.jsx\";\nimport css from './Filter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Filter = _ref => {\n  let {\n    filter,\n    onChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: css.filterForm,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"\",\n      children: [\"Find contacts by name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: filter,\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Filter;\nFilter.propTypes = {\n  filter,\n  onChange\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["C:/Users/ф/Desktop/обучение GOIT/goit-react-hw-02-phonebook/src/components/Filter/Filter.jsx"],"names":["css","Filter","filter","onChange","filterForm","propTypes"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,qBAAhB;;AAEA,OAAO,MAAMC,MAAM,GAAG,QAA0B;AAAA,MAAzB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAyB;AAC9C,sBACE;AAAM,IAAA,SAAS,EAAEH,GAAG,CAACI,UAArB;AAAA,2BACE;AAAO,MAAA,OAAO,EAAC,EAAf;AAAA,uDAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEF,MAHT;AAIE,QAAA,OAAO,EAAC,wHAJV;AAKE,QAAA,KAAK,EAAC,wIALR;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,QAAQ,EAAEC;AAPZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjBM;KAAMF,M;AAmBbA,MAAM,CAACI,SAAP,GAAmB;AAAEH,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAnB","sourcesContent":["import css from './Filter.module.css';\r\n\r\nexport const Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <form className={css.filterForm}>\r\n      <label htmlFor=\"\">\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={filter}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nFilter.propTypes = { filter, onChange };"]},"metadata":{},"sourceType":"module"}